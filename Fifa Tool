using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using iTextSharp;
using iTextSharp.text;
using iTextSharp.text.pdf;
using System.IO;
using System.IO.Compression;
using System.Net.Mail;
using System.Net;
using Recouverement_Datasolution.Properties;
using ClosedXML;
using ClosedXML.Attributes;
using ClosedXML.Excel;
using System.Threading;
using System.Globalization;
using System.Speech.Recognition;
using System.Speech.Synthesis;
using System.Runtime.Serialization.Formatters.Binary;
//373 FIH MOUCHKIL
namespace Recouverement_Datasolution
{
    public partial class Form1 : Form
    {
        SpeechRecognitionEngine recEngine = new SpeechRecognitionEngine();
        SpeechSynthesizer synthesizer = new SpeechSynthesizer();
        public string footer;
        public string Excelfile,IDREC,file;
        public string imageURL;
        public int totaltours,speed=4;
        public int Lastposition, totalcell = 59, incr = 16, stop = 15;
        public string clientname = "", societename = "", respname = "";
        public string savepath;
        public string piece,Addr;
        public static string societe;
        public double solderetarde, toutesolde;
        public string[] Listclient = new string[70000];
        public string[] Listresp = new string[70000];
        public string[] Listsociete = new string[70000];
        public List<string> Docs = new List<string>();
        public List<string> Companies = new List<string>();
        public List<string> footers = new List<string>();
        public List<string> names = new List<string>();
        public List<string> Mails = new List<string>();
        DataTable dt2 = new DataTable();
        Syslog sys = new Syslog();
        public bool HD, HI, WS, CP;
        public Form1()
        {
            InitializeComponent();
        }

        private void xVisualButton2_Click(object sender, EventArgs e)
        {
          new verif().Show();
        }

        private void xVisualComboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {

        }
        public void start()
        {
            bool first = false;
            if(faderCheckBox3.Checked)
            {
                speed = 2;
            }
            else
            {
                speed = 4;
            }
            DataTable dt = new DataTable();
            
            #region OmarTheflow
            faderListBox1.Items.Clear();
            loadparam();
            OpenFileDialog chemin = new OpenFileDialog();
            chemin.InitialDirectory = Application.StartupPath;

            if (chemin.ShowDialog() == DialogResult.OK)
            {
                synthesizer.SpeakAsync("Im reading The file variables and limits");
                pictureBox3.Visible = false;
                label9.Visible = false;
                file = chemin.FileName;
                using (XLWorkbook workbook = new XLWorkbook(file))
                {
                    bool isfirstrow = true;
                    var rows = workbook.Worksheet(Convert.ToInt32(numericUpDown2.Value)).RowsUsed();
                    foreach (var row in rows)
                    {
                        if (isfirstrow)
                        {
                            foreach (IXLCell cell in row.Cells())
                            {
                                dt.Columns.Add(cell.Value.ToString());
                            }
                            isfirstrow = false;
                        }
                        else
                        {
                            dt.Rows.Add();
                            int i = 0;
                            foreach (IXLCell cell in row.Cells())
                            {
                                dt.Rows[dt.Rows.Count - 1][i++] = cell.Value.ToString();
                            }
                        }
                    }
                    dataGridView1.DataSource = dt.DefaultView;
                }
                //a.akhiat.hi@gmail.com;b.azzouzi.hi@gmail.com;
                try 
                {
                    Excel excel = new Excel(chemin.FileName, Convert.ToInt32(numericUpDown1.Value));
                    int clientr = 1; int tour = 1;
                    solderetarde = 0;
                    stop = 15;
                    toutesolde = 0;
                    int emptycell = 1;
                    Random r = new Random();
                    IDREC = Application.StartupPath + "/Facture/Recouverement " + r.Next(0, 90000).ToString();
                    label1.Text = "Initialiser les variables";
                    if (!Directory.Exists(IDREC))
                        Directory.CreateDirectory(IDREC);
                    synthesizer.SpeakAsync("Initializing input and database variables");
                    while ((excel.Readcell(emptycell, 0) != ""))
                    {
                        Listresp[emptycell] = excel.Readcell(emptycell, 13);
                        Listclient[emptycell] = excel.Readcell(emptycell, 3);
                        Listsociete[emptycell] = excel.Readcell(emptycell, 0);
                        label1.Text = "Calcule index + affectation des tableaux";
                        emptycell += 1;
                    }
                    Lastposition = emptycell;
                    totaltours = Lastposition +(Lastposition);
                    faderVerticalProgressBar1.Maximum = totaltours;
                    for (int tourresp = 1; tourresp < Lastposition + 1; tourresp++)
                    {
                        faderVerticalProgressBar1.Value += 1;
                        if (Listresp[tourresp] != "no")
                        {
                            respname = Listresp[tourresp];
                            for (int cmp = 1; cmp < Lastposition; cmp++)
                            {
                                if ((respname == Listresp[cmp]) && (Listresp[cmp] != "no"))
                                {
                                    if (!Directory.Exists(IDREC + "/" + respname))
                                    {
                                        faderListBox1.Items.Add(respname);
                                        Directory.CreateDirectory(IDREC + "/" + respname);
                                        Directory.CreateDirectory(IDREC + "/" + respname + "/CP");
                                        Directory.CreateDirectory(IDREC + "/" + respname + "/WS");
                                        Directory.CreateDirectory(IDREC + "/" + respname + "/HD");
                                        Directory.CreateDirectory(IDREC + "/" + respname + "/HI");
                                    }
                                    Listresp[cmp] = "no";
                                }
                            }
                        }

                    }
                    label14.Text = "TR : " + totaltours.ToString() + "++";
                    Chunk plage = new Chunk();
                    plage.Font.Size = 14;
                    plage.Font.SetStyle(1);
                    while (tour < speed)
                    {

                        solderetarde = 0;
                        toutesolde = 0;

                        if (clientr == Lastposition)
                        {
                            
                            tour += 1;
                            clientr = 1;
                        }

                        totalcell = 0;
                        incr = 15;
                        #region Footer
                        ///Footer Text
                        Chunk HD = new Chunk("                                                        HEALTH DEVELOPEMENT\n");
                        HD.Font.SetStyle(1);
                        HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                        #endregion
                        #region premières paragraphes
                        ///Les premières paragraphes
                        Chunk Date = new Chunk("\n\n                                                                                          Casablanca le : " + DateTime.Now.ToShortDateString() + "\n\n", FontFactory.GetFont("Rockwell"));
                        Date.Font.SetStyle(1);
                        Date.Font.Size = 15;
                        Chunk liste = new Chunk("                            Liste des Factures non soldées \n\n");
                        liste.Font.Size = 20;
                        
                        ///////
                        #endregion
                        #region Les tableaux
                        ////Déclaration des tableaux
                        PdfPTable pdfTable3 = new PdfPTable(2);
                        PdfPTable pdfTable4 = new PdfPTable(4);
                        PdfPTable pdfTable5 = new PdfPTable(4);
                        ///Définir les caractéristiques des tableaux
                        //////Tableau 3
                        pdfTable3.DefaultCell.HorizontalAlignment = Element.ALIGN_CENTER;
                        pdfTable3.DefaultCell.Padding = 5;
                        pdfTable3.DefaultCell.BorderWidth = 1f;
                        if (comboBox1.Text == "Moccasin")
                            pdfTable3.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.Moccasin);
                        else if (comboBox1.Text == "Beige")
                            pdfTable3.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.Beige);
                        else if (comboBox1.Text == "CadetBlue")
                            pdfTable3.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.CadetBlue);
                        else if (comboBox1.Text == "Firebrick")
                            pdfTable3.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.Firebrick);
                        else if (comboBox1.Text == "Gold")
                            pdfTable3.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.Gold);
                        else if (comboBox1.Text == "Goldenrod")
                            pdfTable3.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.Goldenrod);
                        pdfTable3.WidthPercentage = 54;
                        //////les cellules du tableau 3
                        Chunk tt = new Chunk("SOLDE TOTAL (DH)");
                        tt.Font.SetStyle(1);
                        Chunk Sr = new Chunk("SOLDE Retardé (DH)");
                        Sr.Font.Color = new iTextSharp.text.BaseColor(Color.Red);
                        Sr.Font.SetStyle(1);
                        Chunk solde1 = new Chunk(" 0000");
                        //////TABLEAU4 
                        pdfTable4.DefaultCell.Padding = 5;
                        pdfTable4.DefaultCell.BorderWidth = 1;
                        if (comboBox1.Text == "Moccasin")
                            pdfTable4.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.Moccasin);
                        else if (comboBox1.Text == "Beige")
                            pdfTable4.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.Beige);
                        else if (comboBox1.Text == "CadetBlue")
                            pdfTable4.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.CadetBlue);
                        else if (comboBox1.Text == "Firebrick")
                            pdfTable4.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.Firebrick);
                        else if (comboBox1.Text == "Gold")
                            pdfTable4.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.Gold);
                        else if (comboBox1.Text == "Goldenrod")
                            pdfTable4.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.Goldenrod);
                        // Moccasin
                        pdfTable4.WidthPercentage = 90;
                        ///Les cellules du tableau 4
                        ///
                        
                        Chunk Date2 = new Chunk("DATE");
                        Date2.Font.Size = 15;
                        Date2.Font.SetStyle(1);
                        Chunk LIBELLE = new Chunk("LIBELLE");
                        LIBELLE.Font.Size = 15;
                        LIBELLE.Font.SetStyle(1);
                        Chunk SOLDE = new Chunk("SOLDE");
                        SOLDE.Font.Size = 15;
                        SOLDE.Font.SetStyle(1);
                        Chunk ETAT = new Chunk("ETAT");
                        ETAT.Font.Size = 15;
                        ETAT.Font.SetStyle(1);
                        pdfTable4.DefaultCell.HorizontalAlignment = Element.ALIGN_CENTER;
                        pdfTable5.DefaultCell.HorizontalAlignment = Element.ALIGN_CENTER;
                        pdfTable4.AddCell(new Phrase(Date2));
                        pdfTable4.AddCell(new Phrase(LIBELLE));
                        pdfTable4.AddCell(new Phrase(SOLDE));
                        pdfTable4.AddCell(new Phrase(ETAT));
                        pdfTable4.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.White);
                        pdfTable4.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.White);
                        pdfTable4.DefaultCell.Padding = 5;
                        /*
                         Le tableau 5 pour les valeurs prélevés du fichier Excell, ici le design et l'architecture des cellules.
                         J'ai créer ici 60 cellule pour réservé en avance l'emplacement du footer qui contient 3 lignes à la fin de la page PDF, 
                         puis j'ai affecté la valeur 1 au borderwidht sur les premières 4 cellules du tableau 5 pour bien visioner la limite initiale du tableau (les autres cellules sont crées
                         mais ils ne sont pas visible).
                         après l'affectation des cellules par la fonction Chercher , organiser et la boucle For les cellules seront visible.
                         la valeur \0 c'est une string null juste pour éviter que les cellules ne prennent pas une valeur initiale et pour garder la position du footer.
                        */
                        pdfTable5.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.White);
                        pdfTable5.WidthPercentage = 90;
                        pdfTable5.DefaultCell.Padding = 5;
                        pdfTable5.DefaultCell.BorderWidth = 1;
                        pdfTable5.DefaultCell.BorderWidth = 1;
                        faderVerticalProgressBar1.Value += 1;
                        if ((Listclient[clientr] != "no") && (Listsociete[clientr] != "no"))
                        {
                            clientname = Listclient[clientr];
                            societename = Listsociete[clientr];
                            // MessageBox.Show(clientname);
                            first = false; 
                            for (int cmp = 1; cmp < Lastposition; cmp++)
                            {
                             //   if ((clientr == 373) && (cmp == 373))
                                  //  MessageBox.Show(Listclient[clientr] + " " + Listsociete[clientr]);
                                // ((excel.Readcell(cmp, 5) == "Reçu en attente BQ") || (excel.Readcell(cmp, 5) == "Reçu en attente DM")) continue;
                               
                                if ((clientname == Listclient[cmp]) && (Listclient[cmp] != "no") && (Listsociete[cmp] != "no") && (societename == Listsociete[cmp]))
                                {
                                    if(first==false)
                                    {
                                        Chunk plagelast = new Chunk("        Date du   :   " + excel.Readdate(cmp, 1) + " au " + DateTime.Now.ToShortDateString() + "\n\n");
                                        plagelast.Font.Size = 14;
                                        plagelast.Font.SetStyle(1);
                                        plage = plagelast;
                                        first= true;
                                    }
                                   
                                    label1.Text = "Client et Société are true";
                                    label1.Text = "Société : " + societename + " Client : " + clientname;
                                    DateTime lyouma = Convert.ToDateTime(DateTime.Now.ToShortDateString()).Date;
                                    DateTime ancien;
                                    ancien = Convert.ToDateTime(excel.Readdate(cmp, 1)).Date;
                                    TimeSpan difference = lyouma.Subtract(ancien);
                                    var custom = CultureInfo.CurrentCulture.NumberFormat.Clone() as NumberFormatInfo;
                                    custom.NumberGroupSeparator = " ";
                                    var value = double.Parse(excel.Readcell(cmp, 4));
                                    if (difference.TotalDays > 30)
                                    {
                                        Chunk datecolored = new Chunk(excel.Readdate(cmp, 1));
                                        //datecolored.Font.Color = new iTextSharp.text.BaseColor(Color.Red);
                                        Chunk libellecolored = new Chunk(excel.Readcell(cmp, 2));
                                        //libellecolored.Font.Color = new iTextSharp.text.BaseColor(Color.Red);
                                        Chunk soldecolored = new Chunk(value.ToString("n", custom));
                                        soldecolored.Font.Color = new iTextSharp.text.BaseColor(Color.Red);
                                        Chunk etatcolored = new Chunk("Retardé à récupérer");
                                        etatcolored.Font.Color = new iTextSharp.text.BaseColor(Color.Red);

                                        solderetarde += double.Parse(excel.Readcell(cmp, 4));
                                        pdfTable5.AddCell(new Phrase(datecolored));
                                        pdfTable5.AddCell(new Phrase(libellecolored));
                                        pdfTable5.AddCell(new Phrase(value.ToString("n", custom)));
                                        pdfTable5.AddCell(new Phrase(etatcolored));
                                    }
                                    else
                                    {

                                        pdfTable5.AddCell(new Phrase(excel.Readdate(cmp, 1)));
                                        pdfTable5.AddCell(new Phrase(excel.Readcell(cmp, 2)));
                                        pdfTable5.AddCell(new Phrase(value.ToString("n", custom)));
                                        pdfTable5.AddCell(new Phrase("A récupérer"));
                                    }
                                    toutesolde += double.Parse(excel.Readcell(cmp, 4));
                                    totalcell = totalcell + 1;
                                    if ((totalcell == stop))
                                    {
                                        stop = 34;
                                        totalcell = 0;
                                        pdfTable5.DefaultCell.BorderWidth = 0;
                                        for (int k = 0; k < 12; k++)
                                        {
                                            pdfTable5.AddCell(new Phrase("\0"));
                                        }
                                        pdfTable5.DefaultCell.BorderWidth = 1;
                                    }
                                    savepath = IDREC + "/" + excel.Readcell(cmp, 13) + "/" + Listsociete[cmp] + "/" + excel.Readcell(cmp, 13) +" "+ clientname + " " + clientr.ToString() + ".pdf";
                                    #region img&ftr bloc
                                    if ((Settings.Default["company1"].ToString()!="")&&(Listsociete[cmp]==Settings.Default["company1"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/"+Settings.Default["company1"].ToString()+".jpg";
                                        societe = Settings.Default["name1"].ToString();
                                    }
                                    else if ((Settings.Default["company2"].ToString() != "") && (Listsociete[cmp] == Settings.Default["company2"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/" + Settings.Default["company2"].ToString() + ".jpg";
                                        societe = Settings.Default["name2"].ToString();
                                    }
                                    else if ((Settings.Default["company3"].ToString() != "") && (Listsociete[cmp] == Settings.Default["company3"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/" + Settings.Default["company3"].ToString() + ".jpg";
                                        societe = Settings.Default["name3"].ToString();
                                    }
                                    else if ((Settings.Default["company4"].ToString() != "") && (Listsociete[cmp] == Settings.Default["company4"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/" + Settings.Default["company4"].ToString() + ".jpg";
                                        societe = Settings.Default["name4"].ToString();
                                    }
                                    else if ((Settings.Default["company5"].ToString() != "") && (Listsociete[cmp] == Settings.Default["company5"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/" + Settings.Default["company5"].ToString() + ".jpg";
                                        societe = Settings.Default["name5"].ToString();
                                    }
                                    else if ((Settings.Default["company6"].ToString() != "") && (Listsociete[cmp] == Settings.Default["company6"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/" + Settings.Default["company6"].ToString() + ".jpg";
                                        societe = Settings.Default["name6"].ToString();
                                    }
                                    else if ((Settings.Default["company7"].ToString() != "") && (Listsociete[cmp] == Settings.Default["company7"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/" + Settings.Default["company7"].ToString() + ".jpg";
                                        societe = Settings.Default["name7"].ToString();
                                    }
                                    else if ((Settings.Default["company8"].ToString() != "") && (Listsociete[cmp] == Settings.Default["company8"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/" + Settings.Default["company8"].ToString() + ".jpg";
                                        societe = Settings.Default["name8"].ToString();
                                    }
                                    else if ((Settings.Default["company9"].ToString() != "") && (Listsociete[cmp] == Settings.Default["company9"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/" + Settings.Default["company9"].ToString() + ".jpg";
                                        societe = Settings.Default["name9"].ToString();
                                    }
                                    else if ((Settings.Default["company10"].ToString() != "") && (Listsociete[cmp] == Settings.Default["company10"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/" + Settings.Default["company10"].ToString() + ".jpg";
                                        societe = Settings.Default["name10"].ToString();
                                    }
                                    else if ((Settings.Default["company11"].ToString() != "") && (Listsociete[cmp] == Settings.Default["company11"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/" + Settings.Default["company11"].ToString() + ".jpg";
                                        societe = Settings.Default["name11"].ToString();
                                    }
                                    else if ((Settings.Default["company12"].ToString() != "") && (Listsociete[cmp] == Settings.Default["company12"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/" + Settings.Default["company12"].ToString() + ".jpg";
                                        societe = Settings.Default["name12"].ToString();
                                    }
                                    else if ((Settings.Default["company13"].ToString() != "") && (Listsociete[cmp] == Settings.Default["company13"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/" + Settings.Default["company13"].ToString() + ".jpg";
                                        societe = Settings.Default["name13"].ToString();
                                    }
                                    else if ((Settings.Default["company14"].ToString() != "") && (Listsociete[cmp] == Settings.Default["company14"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/" + Settings.Default["company14"].ToString() + ".jpg";
                                        societe = Settings.Default["name14"].ToString();
                                    }
                                    else if ((Settings.Default["company15"].ToString() != "") && (Listsociete[cmp] == Settings.Default["company15"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/" + Settings.Default["company15"].ToString() + ".jpg";
                                        societe = Settings.Default["name15"].ToString();
                                    }
                                    else if ((Settings.Default["company16"].ToString() != "") && (Listsociete[cmp] == Settings.Default["company16"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/" + Settings.Default["company16"].ToString() + ".jpg";
                                        societe = Settings.Default["name16"].ToString();
                                    }
                                    else if ((Settings.Default["company17"].ToString() != "") && (Listsociete[cmp] == Settings.Default["company17"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/" + Settings.Default["company17"].ToString() + ".jpg";
                                        societe = Settings.Default["name17"].ToString();
                                    }
                                    else if ((Settings.Default["company18"].ToString() != "") && (Listsociete[cmp] == Settings.Default["company18"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/" + Settings.Default["company18"].ToString() + ".jpg";
                                        societe = Settings.Default["name18"].ToString();
                                    }
                                    else if ((Settings.Default["company19"].ToString() != "") && (Listsociete[cmp] == Settings.Default["company9"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/" + Settings.Default["company19"].ToString() + ".jpg";
                                        societe = Settings.Default["name19"].ToString();
                                    }
                                    else if ((Settings.Default["company20"].ToString() != "") && (Listsociete[cmp] == Settings.Default["company20"].ToString()))
                                    {
                                        imageURL = Application.StartupPath + "/pictures/" + Settings.Default["company20"].ToString() + ".jpg";
                                        societe = Settings.Default["name20"].ToString();
                                    
                                    }
                                    #endregion
                                    /*
                                    switch (Listsociete[cmp])
                                    {

                                        case "HD":
                                            {
                                                imageURL = Application.StartupPath + "/pictures/HD.jpg";
                                                societe = "Health Developpement";
                                            }; break;
                                        case "HI":
                                            {
                                                imageURL = Application.StartupPath + "/pictures/HI.jpg";
                                                societe = "Health Innovation";
                                            }; break;
                                        case "CP":
                                            {
                                                societe = "Carepartners";
                                                imageURL = Application.StartupPath + "/pictures/CP.jpg";
                                            }; break;
                                        case "WS":
                                            {
                                                imageURL = Application.StartupPath + "/pictures/WS.jpg";
                                                societe = "World Santé";
                                            }; break;
                                    }
                                     * */
                                    Listclient[cmp] = "no";
                                    Listsociete[cmp] = "no";
                                }
                            }

                            /* for (int t = 1; t < totalcell - 1; t++)
                             {
                                 label1.Text = "Calculer le reste";
                                 pdfTable5.DefaultCell.BorderWidth = 0;
                                 pdfTable5.AddCell(new Phrase("\0"));
                             }
                              */
                            tt.Font.Size = 13;
                            Sr.Font.Size = 13;
                            solde1.Font.Size = 13;
                            solde1.Font.SetStyle(1);
                            Chunk retardecolored = new Chunk(solderetarde.ToString());
                            retardecolored.Font.Color = new iTextSharp.text.BaseColor(Color.Red);
                            pdfTable3.AddCell(new Phrase(tt));
                            pdfTable3.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.White);
                            var custom2 = CultureInfo.CurrentCulture.NumberFormat.Clone() as NumberFormatInfo;
                            custom2.NumberGroupSeparator = " ";
                            pdfTable3.AddCell(new Phrase(toutesolde.ToString("n", custom2)));
                            if (comboBox1.Text == "Moccasin")
                                pdfTable3.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.Moccasin);
                            else if (comboBox1.Text == "Beige")
                                pdfTable3.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.Beige);
                            else if (comboBox1.Text == "CadetBlue")
                                pdfTable3.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.CadetBlue);
                            else if (comboBox1.Text == "Firebrick")
                                pdfTable3.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.Firebrick);
                            else if (comboBox1.Text == "Gold")
                                pdfTable3.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.Gold);
                            else if (comboBox1.Text == "Goldenrod")
                                pdfTable3.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.Goldenrod);
                            pdfTable3.AddCell(new Phrase(Sr));
                            pdfTable3.DefaultCell.BackgroundColor = new iTextSharp.text.BaseColor(Color.White);
                            pdfTable3.AddCell(new Phrase(solderetarde.ToString("n", custom2)));
                            #region Ecrire le fichier PDF
                            Chunk client = new Chunk("        Client       :   " + clientname + "\n", FontFactory.GetFont("Rockwell"));
                            client.Font.Size = 14;
                            client.Font.SetStyle(1);

                            #region Image
                            ////Création de l'image
                            iTextSharp.text.Image jpg = iTextSharp.text.Image.GetInstance(imageURL);
                            jpg.Alignment = Element.ALIGN_LEFT;
                            jpg.ScaleToFit(280f, 240f);
                            #endregion
                            using (FileStream stream = new FileStream(savepath, FileMode.Create))
                            {
                                Docs.Add(savepath);
                                Document document = new Document(PageSize.A4, 10f, 10f, 10f, 0f);
                                PdfWriter pw = PdfWriter.GetInstance(document, stream);
                                document.Open();
                                pw.PageEvent = new Header();
                                document.Add(jpg);
                                document.Add(new iTextSharp.text.Paragraph(Date));
                                document.Add(new iTextSharp.text.Paragraph(liste));
                                document.Add(new iTextSharp.text.Paragraph(client));
                                document.Add(new iTextSharp.text.Paragraph(plage));
                                document.Add(pdfTable3);
                                document.Add(new iTextSharp.text.Paragraph("\n\n"));
                                document.Add(pdfTable4);
                                document.Add(pdfTable5);
                                //document.Add(new iTextSharp.text.Paragraph(HD));
                                //document.Add(new iTextSharp.text.Paragraph("         SARL au Capital de 1.100.000,00 Dirhams | 19 Rue Racine, MAG N°3 Q Plateau - Casablanca"));
                                // document.Add(new iTextSharp.text.Paragraph("         Email : contact@healthinnovation.ma | Direction Commerciale et logistique : +212 522 23 22 51"));
                                // document.Add(new iTextSharp.text.Paragraph("                       Direction Générale : +212 522 25 10 31 | Fax : +212 522 23 22 48"));
                                document.NewPage();
                                document.Close();
                                stream.Close();
                                label1.Text = "Etat :";
                            }
                            #endregion
                        }
                        else
                        {
                            
                        }
                        clientr += 1;
                    }

                    excel.Close();
                    label14.Text = "Tr :";
                    synthesizer.SpeakAsync("The PDF files has been successfully generated");
                    MessageBox.Show("La conversion est terminée, Merci de valider l'envoi des fichiers");
                    faderNotifyButton1.NotifyValue = 1;
                   
                    xVisualButton1.Enabled = false;
                    faderNotifyButton1.Enabled = true;
                    faderVerticalProgressBar1.Value = 0;
                    dt2 = dt;
                    
                }
                catch(Exception )
                {
                    MessageBox.Show("Excel file is close !", "Exception", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
               
                    #endregion
            }
        }
        [Serializable]
        public class Setup
        {
            public string Email { get; set; }
            public string password { get; set; }
            public string footer { get; set; }
            public string color { get; set; }
            public string mail1 { get; set; }
            public string mail2 { get; set; }
            public string mail3 { get; set; }
            public string mail4 { get; set; }
            public string mail5 { get; set; }
            public string company1 { get; set; }
            public string company2 { get; set; }
            public string company3 { get; set; }
            public string company4 { get; set; }
            public string company5 { get; set; }
            public string company6 { get; set; }
            public string company7 { get; set; }
            public string company8 { get; set; }
            public string company9 { get; set; }
            public string company10 { get; set; }
            public string company11 { get; set; }
            public string company12 { get; set; }
            public string company13 { get; set; }
            public string company14 { get; set; }
            public string company15 { get; set; }
            public string company16 { get; set; }
            public string company17 { get; set; }
            public string company18 { get; set; }
            public string company19 { get; set; }
            public string company20 { get; set; }
            public string message { get; set; }
            public int sheeta { get; set; }
            public int sheetb { get; set; }
        }
        class DataSerializer
        {
            public void binaryserialise(object data, string filepath)
            {
                FileStream filestream;
                BinaryFormatter bf = new BinaryFormatter();
                if (File.Exists(filepath)) File.Delete(filepath);
                filestream = File.Create(filepath);
                bf.Serialize(filestream, data);
                filestream.Close();
            }
            public object BinaryDeserialize(string filepath)
            {
                object obj = null;
                FileStream filestream;
                BinaryFormatter bf =new BinaryFormatter();
                if(File.Exists(filepath))
                {
                    filestream = File.OpenRead(filepath);
                    obj = bf.Deserialize(filestream);
                    filestream.Close();
                }
                return obj;
            }
        }
        private void xVisualButton1_Click(object sender, EventArgs e)
        {
            start();
        }
        class Header : PdfPageEventHelper
        {
            public override void OnEndPage(PdfWriter writer, Document document)
            {
                Chunk HD = new Chunk(societe + "\n");
                HD.Font.SetStyle(1);
                Chunk Ft = new Chunk();
                Ft.Font.Size = 6;
                if (societe == Settings.Default["name1"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer1"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon); 
                }
                else if (societe == Settings.Default["name2"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer2"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                else if (societe == Settings.Default["name3"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer3"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                else if (societe == Settings.Default["name4"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer4"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                else if (societe == Settings.Default["name5"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer5"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                else if (societe == Settings.Default["name6"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer6"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                else if (societe == Settings.Default["name7"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer7"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                else if (societe == Settings.Default["name8"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer8"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                else if (societe == Settings.Default["name9"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer9"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                else if (societe == Settings.Default["name10"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer10"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                else if (societe == Settings.Default["name11"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer11"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                else if (societe == Settings.Default["name12"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer12"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                else if (societe == Settings.Default["name13"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer13"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                else if (societe == Settings.Default["name14"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer14"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                else if (societe == Settings.Default["name15"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer15"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                else if (societe == Settings.Default["name16"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer16"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                else if (societe == Settings.Default["name17"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer17"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                else if (societe == Settings.Default["name18"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer18"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                else if (societe == Settings.Default["name19"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer19"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                else if (societe == Settings.Default["name20"].ToString())
                {
                    Ft = new iTextSharp.text.Chunk(Settings.Default["footer20"].ToString());
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                    /*
                else if (societe == "Health Developpement")
                {
                    Ft = new iTextSharp.text.Chunk("SARL au Capital de 1.100.000,00 Dirhams | 10 Rue Racine, MAG N°3 Q Plateau - Casablanca\nEmail : contact@healthinnovation.ma | Direction Commerciale et logistique : +212 522 23 22 51\nDirection Générale : +212 522 25 10 31 | Fax : +212 522 23 22 48");
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.Maroon);
                }
                else if (societe == "World Santé")
                {
                    Ft = new iTextSharp.text.Chunk("SARL au Capital de 2.000.000,00 Dirhams | 10 Rue Racine, - Valfleuri, Cité Plateau, Maârif - Casablanca\nTél : +212 522 23 22 51 | +212 522 25 10 31 | Fax : +212 522 23 22 48 \nPatente : 35872279 | RC : 204409 | I.F : 40117575 | C.N.S.S : 8220022 | ICE : 000050103000078");
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.MidnightBlue);
                }
                else if (societe == "Carepartners")
                {
                    Ft = new iTextSharp.text.Chunk("SARL au Capital de 200.000,00 Dirhams | 10 Rue Racine, - Valfleuri - Maarif - Casablanca \n Email : contact@healthinnovation.ma | Direction Commerciale et logistique : +212 522 23 22 51\nDirection Générale : +212 522 25 10 31 | Fax : +212 522 23 22 48");
                    HD.Font.Color = new iTextSharp.text.BaseColor(Color.MidnightBlue);
                }
                     * */
                // base.OnEndPage(writer, document);
                PdfPTable tbfooter = new PdfPTable(1);
                tbfooter.TotalWidth = document.PageSize.Width - document.LeftMargin - document.RightMargin;
                PdfPCell _cell2 = new PdfPCell(new Phrase(Ft));
                _cell2.HorizontalAlignment = Element.ALIGN_CENTER;
                tbfooter.DefaultCell.HorizontalAlignment = Element.ALIGN_CENTER;
                _cell2.Border = 0;
                tbfooter.DefaultCell.BorderWidth = 0;
                tbfooter.AddCell(new Phrase(HD));
                tbfooter.AddCell(_cell2);
                tbfooter.WriteSelectedRows(0, -1, 24, document.Bottom + 68, writer.DirectContent);
            }
        }

        private async void faderNotifyButton1_Click(object sender, EventArgs e)
        {
            const Char word='"';
            string messagehtml;
            faderListBox1.Items.Clear();
            try
            {
                Excel excel = new Excel(file, Convert.ToInt32(numericUpDown1.Value));
               for (int compteur = 1; compteur < Lastposition; compteur++)
               {
                       if (!File.Exists(IDREC + "/" + excel.Readcell(compteur, 13) + " recouverement.zip"))
                       {
                           DataView dv = dataGridView1.DataSource as DataView;
                           if (dv != null)
                               dv.RowFilter = "Resp='" + excel.Readcell(compteur, 13) + "'";
                           Thread.Sleep(1000);
                           messagehtml = "<p bgcolor=" + word + "magenta" + word + "><h2>Bonjour Mr " + excel.Readcell(compteur, 13) + "</h2></p><h2>"+xVisualTextBox5.Text+"</h2><h2><table border= " + word + "3px" + word + "><tr bgcolor=" + word + "magenta" + word + "><td>" + "Cient </td><td>Débit retardé</td></tr>";
                           /*
                           foreach (DataGridViewRow row in dataGridView1.Rows)
                           {
                               faderTextBox3.Text += "<tr> <td>" + row.Cells["CLIENT"].Value + "</td><td>" + row.Cells["Débit Retardé"].Value + "</td></tr>";
                           }
                            * */
                           for (int x = 0; x < dataGridView1.Rows.Count - 1; x++)
                           {
                               var custom = CultureInfo.CurrentCulture.NumberFormat.Clone() as NumberFormatInfo;
                               custom.NumberGroupSeparator = " ";
                               var value = double.Parse(dataGridView1.Rows[x].Cells["Débit Retardé"].Value.ToString());
                               messagehtml += "<tr> <td>" + dataGridView1.Rows[x].Cells["CLIENT"].Value + "</td><td>" + value.ToString("n", custom) + "</td></tr>";
                           } 
                           messagehtml += "</table></h2>";
                           // System.Diagnostics.Process.Start("datagrid.bmp");
                           faderListBox1.Items.Add(excel.Readcell(compteur, 13));
                           //FileInfo info = new FileInfo(IDREC + "/" + excel.Readcell(compteur, 13) + " recouverement.zip");
                           ZipFile.CreateFromDirectory(IDREC + "/" + excel.Readcell(compteur, 13), IDREC + "/" + excel.Readcell(compteur, 13) + " recouverement.zip");
                           await send(excel.Readcell(compteur, 14), IDREC + "/" + excel.Readcell(compteur, 13), messagehtml);
                       }
                   //}
               }
            
                excel.Close();
                MessageBox.Show("L'envoi est complète 100 %", "Message Envoyé", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                xVisualButton1.Enabled = true;
                faderNotifyButton1.Enabled = false;
                faderNotifyButton1.NotifyValue = 0;
                comboBox1.Enabled = true;
                numericUpDown1.Enabled = true;
                pictureBox3.Visible = true;
                label9.Visible = true;
                Docs.Clear();
            #endregion
            }
            catch (Exception)
            {
                MessageBox.Show("Excel file is close !", "Exception", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            
        }
        public Task send(string Ex, string Att,string Msg)
        {
            return Task.Factory.StartNew(() =>
            {
                 try
            {
                /*
                Bitmap bitmap = DrawControlToBitmap(dataGridView1);
                bitmap.Save(IDREC + "/" + excel.Readcell(compteur, 13) + ".bmp");       
                FileInfo info2 = new FileInfo(IDREC + "/" + excel.Readcell(compteur, 13) + ".bmp");
                 * */
                MailMessage msg = new MailMessage();
                msg.From = new MailAddress(Settings.Default["email"].ToString());
                msg.To.Add(Ex);
                msg.Subject = "Recouverement";
                msg.IsBodyHtml = true;
                msg.Body = Msg;
                foreach (string doc in Docs)
                {
                    if (doc.Contains(Att))
                    {
                        FileInfo info = new FileInfo(doc);
                        msg.Attachments.Add(new Attachment(info.FullName));
                    }
                        
                }
                msg.CC.Add("moubarakomar59@gmail.com");
                msg.CC.Add("i.sabour@healthinnovation.ma");
                SmtpClient sc = new SmtpClient("smtp.gmail.com", 587);
                sc.UseDefaultCredentials = false;
                System.Net.NetworkCredential cre = new NetworkCredential(Settings.Default["email"].ToString(), Settings.Default["password"].ToString());
                sc.Credentials = cre;
                sc.EnableSsl = true;
                sc.Send(msg);
            }
            catch (Exception)
            {
                MessageBox.Show("1-Check your internet connection\n2-The file may be too big\n3-make sure mail coordonates are true ", "Rapport sent Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            });
           
        }
        private void Form1_Load(object sender, EventArgs e)
        {
            Syslog.checking();
            synthesizer.Rate = -2;
            synthesizer.SelectVoiceByHints(VoiceGender.Female);
            loadparam();
            for (int i = 0; i < 5; i++)
                Mails.Add( "");
            for (int i = 0; i < 20; i++)
               Companies.Add("");
            for (int i = 0; i < 20; i++)
                footers.Add("");
            for (int i = 0; i < 20; i++)
                names.Add("");
           loadmails();
           loadcompanies();
            if(Settings.Default["Conn"].ToString()=="YES")
            {
                xVisualButton1.Enabled = true;
                xVisualButton2.Enabled = true;
                faderPanel1.Enabled = true;
               // faderPanel3.Enabled = true;
                faderCheckBox1.Enabled = true;
                
            }
            
            pictureBox1.ImageLocation = Application.StartupPath + "/pictures/CP.jpg";
            xVisualTextBox4.Text = Application.StartupPath + "/pictures/CP.jpg";
            synthesizer.SpeakAsync("Welcome To health innovation recouverement Data solution");
        }
        public void loadparam()
        {
            /*
            numericUpDown1.Value = Convert.ToInt32(Settings.Default["feuil"]);
            comboBox1.Text = Settings.Default["color"].ToString();
            xVisualTextBox1.Text = Settings.Default["email"].ToString();
            xVisualTextBox2.Text = Settings.Default["password"].ToString();
             * */
            
            Setup set = null;
            DataSerializer dataserializer = new DataSerializer();
            set = dataserializer.BinaryDeserialize("data.save") as Setup;
            //xVisualComboBox3.Items.Clear();
            //foreach (string item in set.companies)
               // xVisualComboBox3.Items.Add(item);
            numericUpDown1.Value = set.sheeta;
            numericUpDown2.Value = set.sheetb;
            comboBox1.Text = set.color;
            xVisualTextBox1.Text = set.Email;
            xVisualTextBox2.Text = set.password;
            xVisualTextBox5.Text = set.message;
            
        }
        private void xVisualButton3_Click(object sender, EventArgs e)
        {
            /*
            Settings.Default["color"] = comboBox1.Text;
            Settings.Default["feuil"] = numericUpDown1.Text;
            Settings.Default["email"] = xVisualTextBox1.Text;
            Settings.Default["password"] = xVisualTextBox2.Text;
            Settings.Default.Save();
            MessageBox.Show("Paramètres sauvegardées!");
             * */
            Setup conf = new Setup();
            conf.Email = xVisualTextBox1.Text; conf.password = xVisualTextBox2.Text;
           // foreach(string item in xVisualComboBox3.Items)
           // conf.companies.Add(item);
           
            conf.color = comboBox1.Text; conf.footer = xVisualTextBox6.Text; conf.message = xVisualTextBox5.Text; conf.sheeta = Convert.ToInt32(numericUpDown1.Value); conf.sheetb = Convert.ToInt32(numericUpDown2.Value);
            string file = "data.save";
            DataSerializer dataSerializer = new DataSerializer();
            dataSerializer.binaryserialise(conf, file);
            savecompanies();
            loading();
            savemails();
            Settings.Default.Save();
            MessageBox.Show("Settings has been saved");
            loadcompanies();
            loadmails();
        }
        public void savecompanies()
        {
            Settings.Default["company1"] = Companies[0];
            Settings.Default["company2"] = Companies[1];
            Settings.Default["company3"] = Companies[2];
            Settings.Default["company4"] = Companies[3];
            Settings.Default["company5"] = Companies[4];
            Settings.Default["company6"] = Companies[5];
            Settings.Default["company7"] = Companies[6];
            Settings.Default["company8"] = Companies[7];
            Settings.Default["company9"] = Companies[8];
            Settings.Default["company10"] = Companies[9];
            Settings.Default["company11"] = Companies[10];
            Settings.Default["company12"] = Companies[11];
            Settings.Default["company13"] = Companies[12];
            Settings.Default["company14"] = Companies[13];
            Settings.Default["company15"] = Companies[14];
            Settings.Default["company16"] = Companies[15];
            Settings.Default["company17"] = Companies[16];
            Settings.Default["company18"] = Companies[17];
            Settings.Default["company19"] = Companies[18];
            Settings.Default["company20"] = Companies[19];
            Settings.Default["footer1"] = footers[0];
            Settings.Default["footer2"] = footers[1];
            Settings.Default["footer3"] = footers[2];
            Settings.Default["footer4"] = footers[3];
            Settings.Default["footer5"] = footers[4];
            Settings.Default["footer6"] = footers[5];
            Settings.Default["footer7"] = footers[6];
            Settings.Default["footer8"] = footers[7];
            Settings.Default["footer9"] = footers[8];
            Settings.Default["footer10"] = footers[9];
            Settings.Default["footer11"] = footers[10];
            Settings.Default["footer12"] = footers[11];
            Settings.Default["footer13"] = footers[12];
            Settings.Default["footer14"] = footers[13];
            Settings.Default["footer15"] = footers[14];
            Settings.Default["footer16"] = footers[15];
            Settings.Default["footer17"] = footers[16];
            Settings.Default["footer18"] = footers[17];
            Settings.Default["footer19"] = footers[18];
            Settings.Default["footer20"] = footers[19];
            Settings.Default["name1"] = names[0];
            Settings.Default["name2"] = names[1];
            Settings.Default["name3"] = names[2];
            Settings.Default["name4"] = names[3];
            Settings.Default["name5"] = names[4];
            Settings.Default["name6"] = names[5];
            Settings.Default["name7"] = names[6];
            Settings.Default["name8"] = names[7];
            Settings.Default["name9"] = names[8];
            Settings.Default["name10"] = names[9];
            Settings.Default["name11"] = names[10];
            Settings.Default["name12"] = names[11];
            Settings.Default["name13"] = names[12];
            Settings.Default["name14"] = names[13];
            Settings.Default["name15"] = names[14];
            Settings.Default["name16"] = names[15];
            Settings.Default["name17"] = names[16];
            Settings.Default["name18"] = names[17];
            Settings.Default["name19"] = names[18];
            Settings.Default["name20"] = names[19];
            Settings.Default.Save();
        }
        public void savemails()
        {
            Settings.Default["mail11"] = Mails[0];
            Settings.Default["mail12"] = Mails[1];
            Settings.Default["mail13"] = Mails[2];
            Settings.Default["mail14"] = Mails[3];
            Settings.Default["mail15"] = Mails[4];
            Settings.Default.Save();
        }
        public void loadmails()
        {
            Mails[0] = Settings.Default["mail11"].ToString();
            Mails[1] = Settings.Default["mail12"].ToString();
            Mails[2] = Settings.Default["mail13"].ToString();
            Mails[3] = Settings.Default["mail14"].ToString();
            Mails[4] = Settings.Default["mail15"].ToString();
            faderListBox2.Items.Clear();
            foreach (string item in Mails)
            {
                faderListBox2.Items.Add(item);
            }
        }
        public void loadcompanies()
        {
            Companies[0]=Settings.Default["company1"].ToString();
            Companies[1]=Settings.Default["company2"].ToString();
            Companies[2]=Settings.Default["company3"].ToString();
            Companies[3]=Settings.Default["company4"].ToString();
            Companies[4]=Settings.Default["company5"].ToString();
            Companies[5]=Settings.Default["company6"].ToString();
            Companies[6]=Settings.Default["company7"].ToString();
            Companies[7]=Settings.Default["company8"].ToString();
            Companies[8]=Settings.Default["company9"].ToString();
            Companies[9]=Settings.Default["company10"].ToString();
            Companies[10]=Settings.Default["company11"].ToString();
            Companies[11]=Settings.Default["company12"].ToString();
            Companies[12]=Settings.Default["company13"].ToString();
            Companies[13]=Settings.Default["company14"].ToString();
            Companies[14]=Settings.Default["company15"].ToString();
            Companies[15]=Settings.Default["company16"].ToString();
            Companies[16]=Settings.Default["company17"].ToString();
            Companies[17]=Settings.Default["company18"].ToString();
            Companies[18]=Settings.Default["company19"].ToString();
            Companies[19]=Settings.Default["company20"].ToString();
            footers[0] = Settings.Default["footer1"].ToString();
            footers[1] = Settings.Default["footer2"].ToString();
            footers[2] = Settings.Default["footer3"].ToString();
            footers[3] = Settings.Default["footer4"].ToString();
            footers[4] = Settings.Default["footer5"].ToString();
            footers[5] = Settings.Default["footer6"].ToString();
            footers[6] = Settings.Default["footer7"].ToString();
            footers[7] = Settings.Default["footer8"].ToString();
            footers[8] = Settings.Default["footer9"].ToString();
            footers[9] = Settings.Default["footer10"].ToString();
            footers[10] = Settings.Default["footer11"].ToString();
            footers[11] = Settings.Default["footer12"].ToString();
            footers[12] = Settings.Default["footer13"].ToString();
            footers[13] = Settings.Default["footer14"].ToString();
            footers[14] = Settings.Default["footer15"].ToString();
            footers[15] = Settings.Default["footer16"].ToString();
            footers[16] = Settings.Default["footer17"].ToString();
            footers[17] = Settings.Default["footer18"].ToString();
            footers[18] = Settings.Default["footer19"].ToString();
            footers[19] = Settings.Default["footer20"].ToString();
            names[0] = Settings.Default["name1"].ToString();
            names[1] = Settings.Default["name2"].ToString();
            names[2] = Settings.Default["name3"].ToString();
            names[3] = Settings.Default["name4"].ToString();
            names[4] = Settings.Default["name5"].ToString();
            names[5] = Settings.Default["name6"].ToString();
            names[6] = Settings.Default["name7"].ToString();
            names[7] = Settings.Default["name8"].ToString();
            names[8] = Settings.Default["name9"].ToString();
            names[9] = Settings.Default["name10"].ToString();
            names[10] = Settings.Default["name11"].ToString();
            names[11] = Settings.Default["name12"].ToString();
            names[12] = Settings.Default["name13"].ToString();
            names[13] = Settings.Default["name14"].ToString();
            names[14] = Settings.Default["name15"].ToString();
            names[15] = Settings.Default["name16"].ToString();
            names[16] = Settings.Default["name17"].ToString();
            names[17] = Settings.Default["name18"].ToString();
            names[18] = Settings.Default["name19"].ToString();
            names[19] = Settings.Default["name20"].ToString();
            xVisualComboBox3.Items.Clear();
            foreach(string item in Companies)
            {
                xVisualComboBox3.Items.Add(item);
                xVisualComboBox1.Items.Add(item);
            }
        }
        private void button1_Click(object sender, EventArgs e)
        {

        }

        private void xVisualTheme1_Click(object sender, EventArgs e)
        {

        }

        private void button1_Click_1(object sender, EventArgs e)
        {
            try
            {
                MailMessage msg = new MailMessage("moubarakomar59@gmail.com", "moubarakomar59@gmail.com", "Recouverement", "Mail sent By Recouverement App!");
               // msg.Attachments.Add(new Attachment(info.FullName));
                msg.IsBodyHtml = true;
                msg.CC.Add("moubarakomar59@gmail.com");
                msg.CC.Add("lacamora.lu@gmail.com");
                SmtpClient sc = new SmtpClient("smtp.gmail.com", 587);
                sc.UseDefaultCredentials = false;
                System.Net.NetworkCredential cre = new NetworkCredential("moubarakomar59@gmail.com", "ADSL5659");
                sc.Credentials = cre;
                sc.EnableSsl = true;
                sc.Send(msg);
            }
            catch (Exception)
            {
                MessageBox.Show("1-Check your internet connection\n2-The file may be too big\n3-make sure mail coordonates are true ", "Rapport sent Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void button1_Click_2(object sender, EventArgs e)
        {
           
           
        }
        private void faderNotifyButton2_Click(object sender, EventArgs e)
        {
            
            using (OpenFileDialog ofd = new OpenFileDialog() { Filter = "Excel Workbook |*.xlsx", Multiselect = false })
            {
                if (ofd.ShowDialog() == DialogResult.OK)
                {

                    using (XLWorkbook workbook = new XLWorkbook(ofd.FileName))
                    {
                        bool isfirstrow = true;
                        var rows = workbook.Worksheet(1).RowsUsed();
                        foreach (var row in rows)
                        {
                            if (isfirstrow)
                            {
                                foreach (IXLCell cell in row.Cells())
                                {
                                    dt2.Columns.Add(cell.Value.ToString());
                                }
                                isfirstrow = false;
                            }
                            else
                            {
                                dt2.Rows.Add();
                                int i = 0;
                                foreach (IXLCell cell in row.Cells())
                                {
                                    dt2.Rows[dt2.Rows.Count - 1][i++] = cell.Value.ToString();
                                }
                            }
                        }
                        dataGridView1.DataSource = dt2.DefaultView;
                    }
                }
            }
        }
        private void printDocument1_PrintPage(object sender, System.Drawing.Printing.PrintPageEventArgs e)
        {
            Bitmap objbmp = new Bitmap(this.dataGridView1.Width, this.dataGridView1.Height);
            dataGridView1.DrawToBitmap(objbmp, new System.Drawing.Rectangle(0, 0, this.dataGridView1.Width, this.dataGridView1.Height));
            e.Graphics.DrawImage(objbmp, 50, 30);
        }
        public static Bitmap DrawControlToBitmap(Control control)
        {
            Bitmap objbmp = new Bitmap(control.Width, control.Height);
            Graphics graphics = Graphics.FromImage(objbmp);
            System.Drawing.Rectangle rect = control.RectangleToScreen(control.ClientRectangle);
            graphics.CopyFromScreen(rect.Location, Point.Empty, control.Size);
            return objbmp;
        }
        private void button2_Click(object sender, EventArgs e)
        {
            
        }
        private void faderCheckBox2_Click(object sender, EventArgs e)
        {
            if(faderCheckBox2.Checked)   
                faderTextBox2.UseSystemPasswordChar = true;
            else
                faderTextBox2.UseSystemPasswordChar = false;

        }

        private void xVisualButton4_Click(object sender, EventArgs e)
        {
            if ((faderTextBox1.Text== Settings.Default["username"].ToString() ) && (faderTextBox2.Text==Settings.Default["pass"].ToString() ))
            {
                xVisualButton1.Enabled = true;
                xVisualButton2.Enabled = true;
                faderPanel1.Enabled = true;
                //faderPanel3.Enabled = true;
                faderCheckBox1.Enabled = true;
                MessageBox.Show("Successfully logged in !!", "welcome To RecAPP", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
            }
            else
                MessageBox.Show("Username or password incorrect", "Access Denied", MessageBoxButtons.OK, MessageBoxIcon.Error);
        }

        private void faderCheckBox1_Click(object sender, EventArgs e)
        {
            if (faderCheckBox1.Checked)
                Settings.Default["Conn"] = "YES";
            else
                Settings.Default["Conn"] = "NO";

            Settings.Default.Save();
        }
        private void faderCheckBox3_Click(object sender, EventArgs e)
        {
            if(faderCheckBox3.Checked)
                synthesizer.SpeakAsync("Speed has been increased, Turbo mode enabled!");
            else
                synthesizer.SpeakAsync("you have disabled the speed mode");
        }

        private void button1_Click_6(object sender, EventArgs e)
        {
            
        }
        private void xVisualButton5_Click(object sender, EventArgs e)
        {
            /*
            Setup Param = new Setup();
            
            foreach (string item in Param.companies)
            {
                xVisualComboBox3.Items.Add(item);
            }
             * */
        }

        private void label1_Click(object sender, EventArgs e)
        {

        }

        private void tabPage6_Click(object sender, EventArgs e)
        {

        }

        private void xVisualButton7_Click(object sender, EventArgs e)
        {

            if (Addr == Settings.Default["mail11"].ToString())
            {
                Mails[0] = textBox1.Text;
                MessageBox.Show("0");
            }
            else if (Addr == Settings.Default["mail12"].ToString())
            {
                Mails[1] = textBox1.Text;
                MessageBox.Show("1");
            }
            else if (Addr == Settings.Default["mail13"].ToString())
            {
                Mails[2] = textBox1.Text;
                MessageBox.Show("2");
            }
            else if (Addr == Settings.Default["mail14"].ToString())
            {
                Mails[3] = textBox1.Text;
                MessageBox.Show("3");
            }
            else if (Addr == Settings.Default["mail15"].ToString())
            {
                Mails[4] = textBox1.Text;
                MessageBox.Show("4");
            }
            textBox1.Text = "";
            MessageBox.Show("Mail has been edited, please save settings");
            savemails();
            loadmails();

            //MessageBox.Show(Settings.Default["mail15"].ToString());
        }
        
        private void faderListBox2_SelectedIndexChanged(object sender, EventArgs e)
        {
            Addr = faderListBox2.SelectedItem.ToString();
            var item = faderListBox2.SelectedItem;
            textBox1.Text = item.ToString();
            loadmails();
        }

        private void xVisualButton8_Click(object sender, EventArgs e)
        {
            if (Addr == Settings.Default["mail11"].ToString())
            {
                Mails[0] = "Empty";
                MessageBox.Show("0");
            }
            else if (Addr == Settings.Default["mail12"].ToString())
            {
                Mails[1] = "Empty";
                MessageBox.Show("1");
            }
            else if (Addr == Settings.Default["mail13"].ToString())
            {
                Mails[2] = "Empty";
                MessageBox.Show("2");
            }
            else if (Addr == Settings.Default["mail14"].ToString())
            {
                Mails[3] = "Empty";
                MessageBox.Show("3");
            }
            else if (Addr == Settings.Default["mail15"].ToString())
            {
                Mails[4] = "Empty";
                MessageBox.Show("4");
            }
            textBox1.Text = "";
            MessageBox.Show("Mail has been edited, please save settings");
            savemails();
            loadmails();
        }
        public void loading()
        {

            Settings.Default.Save();
        }
        private void xVisualComboBox3_SelectedIndexChanged(object sender, EventArgs e)
        {
            
            }

        private void xVisualComboBox1_SelectedIndexChanged_1(object sender, EventArgs e)
        {
        }
        }
    }
